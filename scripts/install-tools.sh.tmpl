#!/bin/bash
set -euo pipefail

# Essential Development Tools Installation Script
# This script installs tools required by Neovim and zsh configurations

echo "ðŸ”§ Installing essential development tools..."

# Source common functions
source "$(dirname "$0")/../bootstrap/common.sh"

{{- if .is_macos }}
# macOS tool installation using Homebrew
log_info "Installing tools via Homebrew..."

# Check if Homebrew is installed
if ! command_exists brew; then
  log_error "Homebrew is not installed. Please run bootstrap/macos.sh first."
  exit 1
fi

# Core tools
log_info "Installing core development tools..."
brew install \
  ripgrep \
  fzf \
  git-delta \
  bat \
  eza \
  fd \
  tree-sitter \
  node \
  python3 \
  go \
  rust

# Additional useful tools
log_info "Installing additional useful tools..."
brew install \
  lazygit \
  gh \
  jq \
  yq \
  htop \
  bottom \
  dust \
  tokei \
  hyperfine \
  tldr

# Install some fonts
log_info "Installing fonts..."
brew tap homebrew/cask-fonts
brew install --cask \
  font-jetbrains-mono \
  font-fira-code \
  font-hack-nerd-font \
  font-jetbrains-mono-nerd-font

{{- else if .is_linux }}
# Linux tool installation using various package managers
log_info "Installing tools on Linux..."

# Update package list
sudo apt update

# Core tools that might not be in bootstrap
log_info "Installing additional development tools..."
sudo apt install -y \
  python3-pip \
  nodejs \
  npm \
  golang-go \
  universal-ctags \
  silversearcher-ag \
  shellcheck

# Install bat (batcat on Ubuntu)
if ! command_exists bat && ! command_exists batcat; then
  log_info "Installing bat..."
  sudo apt install -y bat
  # Create symlink if it's installed as batcat
  if command_exists batcat && ! command_exists bat; then
    mkdir -p ~/.local/bin
    ln -sf /usr/bin/batcat ~/.local/bin/bat
  fi
fi

# Install eza (modern ls replacement)
if ! command_exists eza; then
  log_info "Installing eza..."
  curl -sS https://webi.sh/eza | sh
fi

# Install fd (find alternative)
if ! command_exists fd; then
  log_info "Installing fd..."
  sudo apt install -y fd-find
  # Create symlink
  mkdir -p ~/.local/bin
  ln -sf /usr/bin/fdfind ~/.local/bin/fd
fi

# Install lazygit
if ! command_exists lazygit; then
  log_info "Installing lazygit..."
  LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
  curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
  tar xf lazygit.tar.gz lazygit
  sudo install lazygit /usr/local/bin
  rm lazygit.tar.gz lazygit
fi

# Install GitHub CLI
if ! command_exists gh; then
  log_info "Installing GitHub CLI..."
  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
  sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list >/dev/null
  sudo apt update
  sudo apt install -y gh
fi

{{- end }}

# Install common language servers for Neovim
log_info "Installing language servers..."

# TypeScript/JavaScript language server
if command_exists npm; then
  npm install -g typescript-language-server typescript
  npm install -g vscode-langservers-extracted
  npm install -g @tailwindcss/language-server
fi

# Python language server
if command_exists pip3; then
  pip3 install --user python-lsp-server[all]
  pip3 install --user black isort flake8 mypy
fi

# Rust analyzer (if Rust is installed)
if command_exists rustup; then
  rustup component add rust-analyzer
fi

# Go language server (if Go is installed)
if command_exists go; then
  go install golang.org/x/tools/gopls@latest
fi

# Configure fzf key bindings
if command_exists fzf; then
  log_info "Setting up fzf key bindings..."
  if [ -f ~/.fzf.zsh ]; then
    echo "source ~/.fzf.zsh" >>~/.zshrc.local
  fi
fi

log_success "Essential development tools installation complete!"
log_info "You may need to restart your shell to use all tools."

